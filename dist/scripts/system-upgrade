#!/bin/bash
. /etc/profile.d/func.sh

## recreate commit, is this part atomic?
## ostree refs --delete trunk
## ostree refs --create trunk $cmt
## - if the delta application is interrupted ostree itself should deal with it so
## it is not a problem of the update process
## - if the update process is interrupted while manipulating revisions it is not
## a problem because delete->create is dumb and will always go through on sequent
## runs.
## - ostree admin upgrade is supposed to be atomic, we run it before recreating
## the ref in case it was interrupted,

## sanity check
which ostree &>/dev/null || { echo "Not an ostree installation, terminating."; exit 1; }
#rc-update show default | grep clearlock || exit 1

## vars
repo=untoreh/pine
os=pine
ref=trunk
work=/var/tmp/pine-upgrade
delta=delta
bdelta=delta_base

## get the current version
read curV < /etc/pine
## get the latest version on github
lasV=$(last_release ${repo})
check_vars lasV curV

## compare
if [ $curV != $lasV -o "$1" = force ]; then
    # make room for new update
    del_deployments
    ## if tmp folder exists an update didn't end properly
    if [ -d $work ]; then
        cd $work || { mkdir -p $work; cd $work; } || \
            { echo "couldn't change to directory ${work}"; exit 1; }
        get_commit
        ## we have a delta file, try upgrade
        if [ -n "$cmt" ]; then
            echo "commit found, applying upgrade"
            apply_upgrade
            ## if upgrade didn't happen delta file might be corrupted
            if [ ! $upg ]; then
                echo "upgrade failed, fetching delta again."
                get_delta
                apply_upgrade
            fi
        else
            ## get the delta file, upgrade
            echo "no commit found, fetching delta"
            get_delta
            apply_upgrade
        fi
    else
        mkdir -p $work
        cd $work
        ## get the delta file, upgrade
        get_delta
        apply_upgrade
    fi
fi

## clean tmp folder, potentially reboot
wrap_up
