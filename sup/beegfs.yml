# Supfile
version: 0.4
commands:
  beegfs-leader-setup:
    desc: |
      docker node engine labels are required to be present for beegfs setup to work. Leader hosts mgmtd and meta services ftm. "originalNodeID" file must be removed cause containers.
    local: |
      sup -f $SUP_FILE -e SUP_NETWORK_CHECK=$SUP_NETWORK local network-leader-check
      mkdir -p /srv/beegfs/etc
      [ "$(ls -A /srv/beegfs/beegfs_mgmtd/* /srv/beegfs/beegfs_meta/* 2>/dev/null)" ] && \
      echo "config folders in /srv/beegfs/ must be empty." && exit 1
      docker stop beegfs-config -t1 ; docker rm beegfs-config
      docker run -d --name beegfs-config -v /srv/beegfs:/beegfs untoreh/containers:beegfs sleep -- 3600
      ## mgmtd
      docker exec beegfs-config /opt/beegfs/sbin/beegfs-setup-mgmtd -p /beegfs/beegfs_mgmtd
      docker exec beegfs-config cp -a /etc/beegfs/beegfs-mgmtd.conf /beegfs/etc
      ## meta
      docker exec beegfs-config /opt/beegfs/sbin/beegfs-setup-meta -p /beegfs/beegfs_meta -s $NODE -m beegfs-mgmtd
      docker exec beegfs-config cp -a /etc/beegfs/beegfs-meta.conf /beegfs/etc
      docker stop beegfs-config -t1 ; docker rm beegfs-config

      ## mgmtd service
      docker service create --name beegfs-mgmtd \
      --constraint "engine.labels.NODE == $NODE" \
      --mount type=bind,src=/srv/beegfs,dst=/beegfs \
      --network $NETWORK \
      untoreh/containers:beegfs /bin/sh -c \
      "rm /beegfs/beegfs_mgmtd/originalNodeID; \
      exec /opt/beegfs/sbin/beegfs-mgmtd cfgFile=/beegfs/etc/beegfs-mgmtd.conf"

      ## meta service
      docker service create --name beegfs-meta \
      --constraint "engine.labels.NODE == $NODE" \
      --mount type=bind,src=/srv/beegfs,dst=/beegfs \
      --network $NETWORK \
      untoreh/containers:beegfs /bin/sh -c \
      "rm /beegfs/beegfs_meta/originalNodeID; \
      exec /opt/beegfs/sbin/beegfs-meta cfgFile=/beegfs/etc/beegfs-meta.conf"
  beegfs-defparts:
    desc: checks if default partition sizes are present
    local: |
      dev=$(cat /etc/fstab | awk '/ \/ /{gsub(/[0-9]*/,"");print$1}') ## root partition to find main block device
      [ "`lsblk ${dev}5 -rno SIZE`" = 5G ] && \
      [ "`lsblk ${dev}6 ${dev}7 -rno SIZE | uniq`" = 128M ] && \
      [ "`lsblk ${dev}5 ${dev}8 -f -rno FSTYPE | uniq`" = xfs ] || \
      ( echo "partitions are not defaults." && exit 1 )
  beegfs-storage-worker-setup:
    desc: configures a storage instance
    run: |
      mkdir -p /srv/beegfs/etc

      ## [ "$(ls -A /srv/beegfs/beegfs_storage/* 2>/dev/null)" ] &&
      ## echo "storage folder in /srv/beegfs/ must be empty." && exit 1
      ## check partitions mounts
      ## sup -f $SUP_FILE $SUP_NETWORK beegfs-defparts
      ## partitions are defaults so mount the last one (7) which will be the storage mount

      ## sn=$(find /srv/beegfs/beegfs_storage* &>/dev/null | wc -l) ## this would require worker-leader comm
      SN=${SN:-0}
      ## dev=$(cat /etc/fstab | awk '/ \/ /{gsub(/[0-9]*/,"");print$1}') ## root partition to find main block device
      ## echo "${dev}8 /srv/beegfs/beegfs_storage${SN} xfs \
      ## rw,noatime,nodiratime,largeio,inode64,\
      ## logbufs=8,logbsize=256k,logdev=${dev}7 0 0" >> /etc/fstab && mount -a

      docker stop beegfs-config -t1 2>/dev/null ; docker rm beegfs-config 2>/dev/null
      docker run -d --name beegfs-config -v /srv/beegfs:/beegfs untoreh/containers:beegfs sleep -- 3600
      docker exec beegfs-config /opt/beegfs/sbin/beegfs-setup-storage -p /beegfs/beegfs_storage${SN} -s $NODE -i ${NODE}${sn} -m beegfs-mgmtd
      docker exec beegfs-config cp -a /etc/beegfs/beegfs-storage.conf /beegfs/etc
      docker stop beegfs-config -t1 2>/dev/null ; docker rm beegfs-config 2>/dev/null
  beegfs-storage-service-setup:
    desc: create docker services from leader node
    local: |
      sup -f $SUP_FILE -e SUP_NETWORK_CHECK=$SUP_NETWORK local network-leader-check
      ## one node id per line
      NODES_LIST=$(docker inspect `docker node ls -q` | \
      awk '/Engine/{flag=1}/Plugins/{flag=0}; flag == 1 && match($0, /NODE/){gsub(/"/,"",$2);print$2}')
      SN=${SN:-0}
      for N in $NODES_LIST ; do
        ## docker service
        docker service create --name beegfs-storage${N}-${SN} \
        --constraint "engine.labels.NODE == $N" \
        --mount type=bind,src=/srv/beegfs,dst=/beegfs \
        --network $NETWORK \
        untoreh/containers:beegfs /bin/sh -c \
        "rm /beegfs/beegfs_storage${SN}/originalNodeID; \
        exec /opt/beegfs/sbin/beegfs-storage cfgFile=/beegfs/etc/beegfs-storage.conf"
      done
